{
  "name": "ansible",
  "publisher": "tomaciazek",
  "displayName": "Ansible",
  "description": "Ansible language support",
  "author": "Tomasz Maciążek",
  "license": "MIT",
  "version": "0.0.2",
  "repository": {
    "type": "git",
    "url": "https://github.com/tomaciazek/vscode-ansible.git"
  },
  "engines": {
    "vscode": "^1.53.0"
  },
  "categories": [
    "Programming Languages"
  ],
  "activationEvents": [
    "onLanguage:ansible"
  ],
  "main": "./client/out/extension",
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "Ansible",
      "properties": {
        "ansible.ansible.path": {
          "scope": "resource",
          "type": "string",
          "default": "ansible",
          "description": "Path to the ansible executable."
        },
        "ansible.ansibleLint.enabled": {
          "scope": "resource",
          "type": "boolean",
          "default": true,
          "description": "Enable linting with ansible-lint on document open/save."
        },
        "ansible.ansibleLint.path": {
          "scope": "resource",
          "type": "string",
          "default": "ansible-lint",
          "description": "Path to the ansible-lint executable."
        }
      }
    },
    "languages": [
      {
        "id": "ansible",
        "aliases": [
          "Ansible",
          "ansible"
        ],
        "extensions": [
          ".yml",
          ".yaml"
        ],
        "configuration": "./ansible-language-configuration.json"
      },
      {
        "comments": "unfortunately this dummy entry is necessary for embedding to work",
        "id": "ansible-jinja",
        "configuration": "./jinja-language-configuration.json"
      }
    ],
    "grammars": [
      {
        "comments": [
          "YAML syntax as base for ansible",
          "scopeName changed so that we can use it as base for injections"
        ],
        "language": "ansible",
        "scopeName": "source.ansible",
        "path": "./syntaxes/external/YAML.tmLanguage"
      },
      {
        "comments": [
          "imported jinja syntax",
          "this is so that we do not need to rely on Jinja extension being installed"
        ],
        "language": "ansible-jinja",
        "scopeName": "source.ansible-jinja",
        "path": "./syntaxes/external/jinja.tmLanguage.json"
      },
      {
        "comments": [
          "changes highlighting of Ansible tags"
        ],
        "path": "./syntaxes/ansible/generated/keywords.tmLanguage",
        "scopeName": "injection.ansible.keywords",
        "injectTo": [
          "source.ansible"
        ]
      },
      {
        "comments": [
          "Support for Jinja in double curly braces"
        ],
        "path": "./syntaxes/ansible/generated/jinja-braces.tmLanguage",
        "scopeName": "injection.ansible.jinja-braces",
        "embeddedLanguages": {
          "meta.embedded.inline.jinja": "ansible-jinja"
        },
        "injectTo": [
          "source.ansible"
        ]
      },
      {
        "comments": [
          "Support for Jinja in conditionals"
        ],
        "path": "./syntaxes/ansible/generated/jinja-conditionals.tmLanguage",
        "scopeName": "injection.ansible.jinja-conditionals",
        "embeddedLanguages": {
          "meta.embedded.inline.jinja": "ansible-jinja"
        },
        "injectTo": [
          "source.ansible"
        ]
      },
      {
        "comments": [
          "What follows are techniques that are basically abusing the injection system of VSCode.",
          "These cannot be replicated in other IDEs with just TM grammars unless similar injection system is used.",
          "The basic quote escapes (does not work inside brackets etc.) is implemented in the grammar anyway",
          "if someone finds it useful.",
          "Support for single quote escapes in Jinja"
        ],
        "path": "./syntaxes/ansible/generated/jinja-single-quote-escape.tmLanguage",
        "scopeName": "injection.ansible.jinja-single-quote-escape",
        "injectTo": [
          "source.ansible"
        ]
      },
      {
        "comments": [
          "Support for double quote escapes in Jinja"
        ],
        "path": "./syntaxes/ansible/generated/jinja-double-quote-escape.tmLanguage",
        "scopeName": "injection.ansible.jinja-double-quote-escape",
        "injectTo": [
          "source.ansible"
        ]
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run webpack",
    "webpack": "npm run clean && webpack --mode production --config ./client/webpack.config.js && webpack --mode production --config ./server/webpack.config.js",
    "webpack:dev": "npm run clean && webpack --mode development --config ./client/webpack.config.js && webpack --mode development --config ./server/webpack.config.js",
    "compile": "tsc -b",
    "watch": "tsc -b -w",
    "webpack:watch:client": "webpack --mode none --config ./client/webpack.config.js --watch",
    "webpack:watch:server": "webpack --mode none --config ./server/webpack.config.js --watch",
    "clean": "rimraf client/out && rimraf server/out && rimraf **/tsconfig.tsbuildinfo",
    "postinstall": "cd client && npm install && cd ../server && npm install && cd ..",
    "test-compile": "tsc -p ./"
  },
  "devDependencies": {
    "@types/chai": "^4.2.15",
    "@types/mocha": "^8.2.1",
    "@types/node": "^14.14.31",
    "@types/vscode": "^1.53.0",
    "@typescript-eslint/eslint-plugin": "^4.15.2",
    "@typescript-eslint/parser": "^4.15.2",
    "chai": "^4.3.1",
    "eslint": "^7.20.0",
    "eslint-config-prettier": "^8.0.0",
    "merge-options": "^3.0.4",
    "mocha": "^8.3.0",
    "rimraf": "^3.0.2",
    "ts-loader": "^8.1.0",
    "ts-node": "^9.1.1",
    "typescript": "^4.1.5",
    "webpack": "^5.28.0",
    "webpack-cli": "^4.6.0"
  },
  "dependencies": {
    "yaml": "^1.10.0",
    "@flatten-js/interval-tree": "^1.0.13"
  }
}
